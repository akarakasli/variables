name: Dart

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Note that this workflow uses the latest stable version of the Dart SDK.
    # Docker images for other release channels - like dev and beta - are also
    # available. See https://hub.docker.com/r/google/dart/ for the available
    # images.
    container:
      image:  google/dart:latest

    steps:
      - uses: actions/checkout@v2

      - name: Print Dart SDK version
        run: dart --version

      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: dart test

void main() {
  
  //variable tanımlama
  String myString = "Merhaba";
    int myNumber = 13;
    double myNumber2 = 15.2;
  bool myBoolean = true;
  
  //variable içeriğini değiştirmek
  myString = "Selam";
  print(myString);
    
  //variable başına final koyulduğunda tekrar içeriği değiştirilemez.
  final String myString2 = "Naber";
  print(myString2);
  myString2 = "Nasıl gidiyor";
    print(myString2); //-> hata verir
  
  //Sabit belirlemek için;
  const int muNumber3 = 5;
  myNumber3 = 8;
  print(myNumber3)
}
void main() {
  
  //variable tanımlama
  String myString = "Merhaba";
    int myNumber = 13;
    double myNumber2 = 15.2;
  bool myBoolean = true;
  
  //variable içeriğini değiştirmek
  myString = "Selam";
  print(myString);
    
  //variable başına final koyulduğunda tekrar içeriği değiştirilemez.
  final String myString2 = "Naber";
  print(myString2);
  myString2 = "Nasıl gidiyor";
    print(myString2); //-> hata verir
  
  //Sabit belirlemek için;
  const int muNumber3 = 5;
  myNumber3 = 8;
  print(myNumber3)
}
void main() {
  
  //variable tanımlama
  String myString = "Merhaba";
    int myNumber = 13;
    double myNumber2 = 15.2;
  bool myBoolean = true;
  
  //variable içeriğini değiştirmek
  myString = "Selam";
  print(myString);
    
  //variable başına final koyulduğunda tekrar içeriği değiştirilemez.
  final String myString2 = "Naber";
  print(myString2);
  myString2 = "Nasıl gidiyor";
    print(myString2); //-> hata verir
  
  //Sabit belirlemek için;
  const int muNumber3 = 5;
  myNumber3 = 8;
  print(myNumber3)
}
void main() {
  
  //variable tanımlama
  String myString = "Merhaba";
    int myNumber = 13;
    double myNumber2 = 15.2;
  bool myBoolean = true;
  
  //variable içeriğini değiştirmek
  myString = "Selam";
  print(myString);
    
  //variable başına final koyulduğunda tekrar içeriği değiştirilemez.
  final String myString2 = "Naber";
  print(myString2);
  myString2 = "Nasıl gidiyor";
    print(myString2); //-> hata verir
  
  //Sabit belirlemek için;
  const int muNumber3 = 5;
  myNumber3 = 8;
  print(myNumber3)
}
